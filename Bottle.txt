@tool
extends RigidBody3D

var dragging : bool = false
var mouse_relative : Vector2

func _physics_process(_delta):
	if (dragging and linear_velocity.length_squared() < 30.0):
		var mouse_y : float = -mouse_relative.y / 2.0
		var mouse_x : float = mouse_relative.x / 6.0
		apply_central_force(Vector3(mouse_x, mouse_y, 0.0))
		mouse_relative = Vector2(0.0,0.0)

func _input(event):
	if (event.is_action_pressed("left_mouse_button")):
		var space = get_world_3d().direct_space_state
		var camera : Camera3D = get_viewport().get_camera_3d()
		var mouse_pos : Vector2 = get_viewport().get_mouse_position()
		var ray_from : Vector3 = camera.project_ray_origin(mouse_pos)
		var ray_to : Vector3 = ray_from + camera.project_ray_normal(mouse_pos) * 100000
		var ray_query := PhysicsRayQueryParameters3D.create(ray_from, ray_to)
		var result := space.intersect_ray(ray_query)
		if (result and result.collider == self):
			gravity_scale = 0
			linear_damp = 10
			angular_damp = 10
			dragging = true
	elif (event.is_action_released("left_mouse_button")):
		gravity_scale = 1
		linear_damp = 1
		angular_damp = 1
		dragging = false
	if (dragging and event is InputEventMouseMotion):
		mouse_relative = event.relative
